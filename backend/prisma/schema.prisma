// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  name           String
  mail           String      @unique
  role           Role
  designation    Designation @relation(fields: [designationId], references: [id])
  designationId  Int
  sex            Sex
  experience     Int
  joindate       DateTime
  skills         UserSkill[]
  progress       Progress[]
  Hashedpassword String 
}

model Course {
  id               Int           @id @default(autoincrement())
  title            String        @unique
  difficulty_level Difficulty
  no_of_chapters   Int
  duration         Float
  createdAt        DateTime      @default(now())
  skills           CourseSkill[]
  progress         Progress[]
}

model Designation {
  id     Int                @id @default(autoincrement())
  title  String             @unique
  users  User[]
  skills DesignationSkill[]
}

model Skill {
  id                Int                @id @default(autoincrement())
  name              String             @unique
  userSkills        UserSkill[]
  courseSkills      CourseSkill[]
  designationSkills DesignationSkill[]
}

model Progress {
  id                   Int      @id @default(autoincrement())
  course               Course   @relation(fields: [courseId], references: [id])
  courseId             Int
  user                 User     @relation(fields: [userId], references: [id])
  userId               Int
  updatedAt            DateTime @default(now())
  chapters_completed   Int
  percentage_completed Float
  certificate          String? // Nullable field
}

model UserSkill {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  skill   Skill @relation(fields: [skillId], references: [id])
  skillId Int
}

model CourseSkill {
  id       Int    @id @default(autoincrement())
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
  skill    Skill  @relation(fields: [skillId], references: [id])
  skillId  Int
}

model DesignationSkill {
  id            Int         @id @default(autoincrement())
  designation   Designation @relation(fields: [designationId], references: [id])
  designationId Int
  skill         Skill       @relation(fields: [skillId], references: [id])
  skillId       Int
}

// Enum definitions
enum Role {
  admin
  employee
}

enum Sex {
  m
  f
}

enum Difficulty {
  Easy
  Medium
  Hard
}
